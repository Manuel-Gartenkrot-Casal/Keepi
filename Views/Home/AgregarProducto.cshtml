@model Keepi.Models.ProductoXHeladera
@{
    ViewData["Title"] = "Agregar Producto";
    var productosJson = Json.Serialize(ViewBag.ListaProductos);
}

<div style="display: flex; justify-content: center; align-items: flex-start; min-height: calc(100vh - 80px); padding-top: 50px; background-color: #f2f2f2;"> @* Ajusta min-height y padding-top según la altura de tu header *@
    <div class="form-container" style="background-color: #f9f9f9; padding: 30px; border-radius: 15px; box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1); max-width: 400px; width: 100%;">
        <form method="post" asp-action="Guardar" asp-controller="AgregarProducto">
            
            <h2 style="text-align: center; color: #333; margin-bottom: 25px; font-weight: bold;">Agregar Producto</h2>
            
            <div style="margin-bottom: 20px;">
                <label for="product-search" style="display: block; margin-bottom: 8px; color: #555; font-weight: 600;">Buscar Producto Base</label>
                <input type="text" id="product-search" placeholder="Escribe (ej: Leche, Huevo...)" list="productos-list" autocomplete="off" 
                       style="width: 100%; padding: 12px 15px; border: 1px solid #ccc; border-radius: 8px; font-size: 1rem; box-sizing: border-box;">
                <datalist id="productos-list">
                    </datalist>
            </div>

            <img id="product-image" src="" alt="Vista previa del producto" 
                 style="display: none; width: 120px; height: 120px; margin: 15px auto; border-radius: 10px; object-fit: cover; border: 2px solid #ddd;"/>

            <input type="hidden" id="idProducto" name="idProducto" />
            <input type="hidden" id="foto-hidden" name="foto" />

            <div style="margin-bottom: 20px;">
                <label for="nombreEsp" style="display: block; margin-bottom: 8px; color: #555; font-weight: 600;">Nombre Específico</label>
                <input type="text" id="nombreEsp" name="nombreEsp" placeholder="Ej: Leche Sancor 1L" required
                       style="width: 100%; padding: 12px 15px; border: 1px solid #ccc; border-radius: 8px; font-size: 1rem; box-sizing: border-box;">
            </div>
            
            <div style="margin-bottom: 30px;">
                <label for="fechaVencimiento" style="display: block; margin-bottom: 8px; color: #555; font-weight: 600;">Fecha de Vencimiento</label>
                <input type="date" id="fechaVencimiento" name="fechaVencimiento" required
                       style="width: 100%; padding: 12px 15px; border: 1px solid #ccc; border-radius: 8px; font-size: 1rem; box-sizing: border-box;">
            </div>

            <button type="submit" 
                    style="width: 100%; padding: 14px 20px; background-color: #6a6ad9; color: white; border: none; border-radius: 8px; font-size: 1.1rem; cursor: pointer; transition: background-color 0.3s ease;">
                Agregar a Heladera
            </button>
            
             @if (TempData["Error"] != null)
            {
                <div class="error-message" style="color: red; margin-top: 15px; text-align: center; font-weight: 500;">@TempData["Error"]</div>
            }
            @if (TempData["Success"] != null)
            {
                <div class="success-message" style="color: #4CAF50; margin-top: 15px; text-align: center; font-weight: 500;">@TempData["Success"]</div>
            }

            <p class="message" style="text-align: center; margin-top: 25px;"><a asp-action="MiHeladera" asp-controller="Home" style="color: #6a6ad9; text-decoration: none;">Volver a Mi Heladera</a></p>
        </form>
    </div>
</div>

@section Scripts {
    <script>
        const productosBase = @Html.Raw(productosJson);

        const searchInput = document.getElementById('product-search');
        const dataList = document.getElementById('productos-list');
        const productImage = document.getElementById('product-image');
        const idProductoInput = document.getElementById('idProducto');
        const nombreEspInput = document.getElementById('nombreEsp');
        const fotoInput = document.getElementById('foto-hidden');
        const fechaInput = document.getElementById('fechaVencimiento');

        searchInput.addEventListener('input', function(e) {
            const inputVal = e.target.value.toLowerCase();
            dataList.innerHTML = ''; 

            if (inputVal.length < 1) {
                productImage.style.display = 'none';
                return;
            }

            const matches = productosBase.filter(p => p.Nombre.toLowerCase().includes(inputVal));
            
            matches.forEach(prod => {
                const option = document.createElement('option');
                option.value = prod.Nombre;
                dataList.appendChild(option);
            });
        });

        searchInput.addEventListener('change', function(e) {
            const selectedName = e.target.value;
            const selectedProduct = productosBase.find(p => p.Nombre === selectedName);

            if (selectedProduct) {
                idProductoInput.value = selectedProduct.ID;
                fotoInput.value = selectedProduct.Foto;
                nombreEspInput.value = selectedProduct.Nombre; 
                productImage.src = selectedProduct.Foto;
                productImage.style.display = 'block';
            } else {
                productImage.style.display = 'none';
                idProductoInput.value = '';
                fotoInput.value = '';
            }
        });

        fechaInput.min = new Date().toISOString().split("T")[0];
    </script>
}